buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
		classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
	}
}

plugins {
	id 'com.palantir.git-version' version '0.15.0'
	id 'java-library'
}

apply plugin: 'java-library'
apply plugin: 'io.codearte.nexus-staging'

description = "kafka-connect-s3"

allprojects  {
  apply plugin: 'maven-publish'
  apply plugin: 'idea'

  group = 'com.spredfast.kafka.connect.s3'
  version = '1.0.8'

  apply plugin: 'java-library'
  sourceCompatibility = 11
  targetCompatibility = 11

  repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
  }
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {
	dependencies {
		// provided in the connect classpath
		exclude(dependency('org.apache.kafka:connect-api:2.8.0'))
		exclude(dependency('org.apache.kafka:kafka-clients:2.8.0'))
		exclude(dependency('net.jpountz.lz4:.*:.*'))
		exclude(dependency('org.xerial.snappy:.*:.*'))
		exclude(dependency('org.slf4j:.*:.*'))
	}

	// for things we directly depend on, repackage so we don't conflict with other connectors
	relocate 'com.amazonaws', 'com.spredfast.shade.amazonaws'
	relocate 'com.fasterxml', 'com.spredfast.shade.fasterxml'
	relocate 'org.apache.commons', 'com.spredfast.shade.apache.commons'
	relocate 'org.apache.http', 'com.spredfast.shade.apache.http'
	relocate 'org.joda', 'com.spredfast.shade.joda'
}

dependencies {
	implementation project(':sink')
	implementation project(':source')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	archiveClassifier.set('javadoc')
	from subprojects*.tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	from subprojects*.sourceSets.main.allSource
	archiveClassifier.set('sources')
}

jar {
	from subprojects*.sourceSets.main.output
}

artifacts {
	archives javadocJar, sourcesJar
}

ext {
	pomHumanName = 'Kafka Connect S3'
	pomDesc = 'S3 Source and Sink Connectors for Kafka Connect'
}

// TODO: Rewrite upload.gradle to use the maven-publish plugin
// apply from: 'upload.gradle'
